@model EntityLayer.Concrete.Blog


@{
    ViewData["Title"] = "BlogAdd";
    Layout = "~/Views/Shared/WriterLayout.cshtml";
}
<div style="display:flex; justify-content:space-between;">
    <h1>Yeni Blog Oluştur</h1>
    <a href="~/Blog/BlogListByWriter" class="btn btn-primary"><i class="mdi mdi-keyboard-backspace"></i> Geri Dön</a>
</div>
<br />

@using (Html.BeginForm("BlogAdd", "Blog", FormMethod.Post))
{
    @Html.Label("Blog Başlığı")
    @Html.TextBoxFor(x => x.BlogTitle, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.BlogTitle, "", new { @class = "text-danger" })
    <br />
    @Html.Label("Blog Görseli")
    @Html.TextBoxFor(x => x.BlogImage, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.BlogImage, "", new { @class = "text-danger" })
    <br />
    @Html.Label("Blog Küçük Görsel")
    @Html.TextBoxFor(x => x.BlogThumbnailImage, new { @class = "form-control" })
    <br />
    @Html.Label("Kategori")
    @Html.DropDownListFor(x => x.CategoryID, (List<SelectListItem>)ViewBag.cv, new { @class = "form-control" })
    <br />
    @Html.Label("Blog İçeriği")
    @Html.TextAreaFor(x => x.BlogContent, 10, 10, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.BlogContent, "", new { @class = "text-danger" })
    <br />
    <div style="display:flex; justify-content:end; padding-right:1em;"><button class="btn btn-primary">Kaydet</button></div>

}